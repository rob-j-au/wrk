name: Monorepo Docker Build and Push

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build all services'
        required: false
        default: 'false'
        type: boolean

env:
  REGISTRY: ghcr.io

jobs:
  # Job to detect which services have changed
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      wrk-ork: ${{ steps.changes.outputs.wrk-ork }}
      wrk-book: ${{ steps.changes.outputs.wrk-book }}
      app-node: ${{ steps.changes.outputs.app-node }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            wrk-ork:
              - 'wrk-ork/**'
            wrk-book:
              - 'wrk-book/**'
            app-node:
              - 'app-node/**'

  # Build and push wrk-ork service
  build-wrk-ork:
    needs: detect-changes
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.force_build == 'true' || needs.detect-changes.outputs.wrk-ork == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/wrk-ork
        tags: |
          # Latest tag for main branch
          type=raw,value=latest,enable={{is_default_branch}}
          # Development tag for dev branch
          type=raw,value=development,enable=${{ github.ref == 'refs/heads/dev' }}
          # Alpha tags for other branches
          type=raw,value=alpha,enable=${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/dev' }}
          # Commit SHA tag for all branches
          type=raw,value={{sha}}
          # PR tags
          type=ref,event=pr

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push wrk-ork Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./wrk-ork
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=wrk-ork
        cache-to: type=gha,mode=max,scope=wrk-ork
        platforms: linux/amd64

  # Build and push wrk-book service
  build-wrk-book:
    needs: detect-changes
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.force_build == 'true' || needs.detect-changes.outputs.wrk-book == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/wrk-book
        tags: |
          # Latest tag for main branch
          type=raw,value=latest,enable={{is_default_branch}}
          # Development tag for dev branch
          type=raw,value=development,enable=${{ github.ref == 'refs/heads/dev' }}
          # Alpha tags for other branches
          type=raw,value=alpha,enable=${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/dev' }}
          # Commit SHA tag for all branches
          type=raw,value={{sha}}
          # PR tags
          type=ref,event=pr

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push wrk-book Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./wrk-book
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=wrk-book
        cache-to: type=gha,mode=max,scope=wrk-book
        platforms: linux/amd64

  # Build and push app-node service
  build-app-node:
    needs: detect-changes
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.force_build == 'true' || needs.detect-changes.outputs.app-node == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/app-node
        tags: |
          # Latest tag for main branch
          type=raw,value=latest,enable={{is_default_branch}}
          # Development tag for dev branch
          type=raw,value=development,enable=${{ github.ref == 'refs/heads/dev' }}
          # Alpha tags for other branches
          type=raw,value=alpha,enable=${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/dev' }}
          # Commit SHA tag for all branches
          type=raw,value={{sha}}
          # PR tags
          type=ref,event=pr

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push app-node Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./app-node
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=app-node
        cache-to: type=gha,mode=max,scope=app-node
        platforms: linux/amd64

  # Summary job to report build status
  build-summary:
    needs: [detect-changes, build-wrk-ork, build-wrk-book, build-app-node]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Build Summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Service | Changes Detected | Build Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|------------------|--------------|" >> $GITHUB_STEP_SUMMARY
          echo "| wrk-ork | ${{ needs.detect-changes.outputs.wrk-ork }} | ${{ needs.build-wrk-ork.result || 'skipped' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| wrk-book | ${{ needs.detect-changes.outputs.wrk-book }} | ${{ needs.build-wrk-book.result || 'skipped' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| app-node | ${{ needs.detect-changes.outputs.app-node }} | ${{ needs.build-app-node.result || 'skipped' }} |" >> $GITHUB_STEP_SUMMARY
